---
title: "Time series patterns/graphics"
execute:
  echo: false
format: html
---

```{r}
#| label: setup
#| include: false
library(feasts)
library(tsibble)
library(readr)
library(tidyverse)
library(lubridate)
library(tsbox)
library(dygraphs)

arrival_daily_keys <- read_rds("data/arrival_daily_keys.rds")
arrival_hourly_keys <- read_rds("data/arrival_hourly_keys.rds")
arrival_half_hourly_keys <- read_rds("data/arrival_half_hourly_keys.rds")
arrival_hourly <- read_rds("data/arrival_hourly.rds")
arrival_daily <- read_rds("data/arrival_daily.rds")
```

# Lab 2: time series patterns/graphics

## time plot

You can create time plot using `autoplot()` function

```{r}
#| label: ts-plot
arrival_daily |> ???(???) # create a time plot of daily data
arrival_hourly |> ???() # create a time plot of hourly data
```

You can use filter_index or head() and tail() to select a subset of time series , try ?filter_index or google it


```{r }
#| label: filter-index
arrival_daily |> tsibble::filter_index("2016 Feb") |> autoplot(arrival) # plot only February 2016 
arrival_daily |> tsibble::???(???) |> autoplot(arrival) # plot from February 2016 till the end
arrival_daily |> tsibble::???(???) |> autoplot(arrival) # plot from February 2016 till the end
arrival_hourly |> tsibble::filter_index(???) |> autoplot(arrival) # plot only 2015-01-01
arrival_daily |> ???(n=100) |> autoplot() # first 100 observations
arrival_daily |> ???(n=100) |> autoplot()  # last 100 observations
```

It could be really hard to visualise hourly or daily data, one possibility is to view a portion of the data, you can also use  interactive plots:

```{r}
#| label: daily-arrival-dygraph
tsbox::ts_xts(arrival_daily) |> 
  dygraph() |> 
  dyRangeSelector(dateWindow = c("2010-01-01", "2010-02-01"))
```

```{r}
#| label: hourly-arrival-dygraph
tsbox::ts_xts(arrival_hourly) |> 
  dygraph() |> 
  dyRangeSelector(dateWindow = c("2010-01-01", "2010-01-02"))
```

## Seasonal plots

use seasonal and subseries plots to check whether series contain seasonality 

```{r}
#| label: seasonal-plot
arrival_daily |> feasts::???(???) #seasonal plot
arrival_daily |> feasts::???(???)# subseries plot
```

You can also try this with hourly series, you can change the "period= ..." argument to see different periods of seasonality

```{r}
#| label: multiple-seasonality
arrival_hourly |> feasts::???(???) #seasonal plot
arrival_hourly |> feasts::???(???)# subseries plot
```

Is there any seasonality in the daily time series? what about hourly and monthly?

## autocorrelation plot

```{r}
#| label: acf-calcul
arrival_daily |>
  feasts::???(arrival, lags = ???, geom = "point")# create lag plots for 14 lags, from 1 to 14
arrival_daily |> feasts::???(lag_max = ???)# compute autocorrelation function for 14 lags
```

plot the autocorrelation 

```{r acf-plot}
arrival_hourly |> ???(lag_max = ???) |> autoplot()# plot acf
arrival_daily |> ???(lag_max = ???) |> autoplot()# plot acf
```

You can have a time plot, acf and season plot in one single plot, if you use `gg_tsdisplay()` function

```{r multiple-plot-, options}
arrival_hourly |> ???()#  
arrival_daily |> ???()#  
```

You can use ljung box to test whether ACF is significant:

>if p-value is small, << 0.05 then there is a significant autocorrelation:

```{r ljung-box-test}
arrival_daily |> features(???, ljung_box)
```

What autocorrelation will tell us? Which key features could be highlighted by ACF?

  